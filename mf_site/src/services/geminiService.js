import { GoogleGenerativeAI } from "@google/generative-ai";

// Gemini API anahtarÄ±nÄ± environment variable'dan al
const API_KEY = import.meta.env.VITE_GEMINI_API_KEY;

// EÄŸer API key yoksa uyarÄ± ver
if (!API_KEY) {
  console.warn("VITE_GEMINI_API_KEY environment variable bulunamadÄ±!");
}

// Gemini AI modelini baÅŸlat
const genAI = new GoogleGenerativeAI(API_KEY);

// FÄ°ÅžEK'in kiÅŸisel bilgileri - context olarak kullanÄ±lacak
const FISEK_CONTEXT = `
Sen FÄ°ÅžEK'in kiÅŸisel AI asistanÄ±sÄ±n. AÅŸaÄŸÄ±daki bilgileri kullanarak sorularÄ± yanÄ±tla:

KÄ°ÅžÄ°SEL BÄ°LGÄ°LER:
- Ad Soyad: Muhammet FÄ°ÅžEK
- Unvan: YazÄ±lÄ±m GeliÅŸtirici
- E-posta: muhammetfisek121@gmail.com
- GitHub: https://github.com/muhammetfisek
- LinkedIn: https://www.linkedin.com/in/muhammet-fisek/

EÄžÄ°TÄ°M:
- Bilgisayar MÃ¼hendisliÄŸi Ã¶ÄŸrencisi

YETENEKLER:
Programlama & GeliÅŸtirme:
- Java - Spring Boot (80%)
- React.js (70%)
- Android GeliÅŸtirme(Java) (70%)
- C# (70%)
- C (75%)
- JavaScript (78%)
- HTML/CSS (95%)
- MS-SQL (70%)
- PostgreSQL (50%)
- Veri YapÄ±larÄ± ve Algoritmalar (75%)
- Nesne YÃ¶nelimli Programlama (OOP) (75%)

TasarÄ±m:
- Mobile Android UI/UX (40%)
- Web UI/UX (85%)
- Adobe Photoshop (50%)

Diller:
- TÃ¼rkÃ§e (Ana dil)
- Ä°ngilizce (Ä°leri seviye)

DiÄŸer:
- Problem Ã‡Ã¶zme (85%)
- TakÄ±m Ã‡alÄ±ÅŸmasÄ± (80%)
- Proje YÃ¶netimi (70%)
- HÄ±zlÄ± Ã–ÄŸrenme (90%)

PROJELER:
1. AI-Based Hairdresser Assistant and Business Management App
   - KuafÃ¶rler ve gÃ¼zellik salonlarÄ± iÃ§in randevu yÃ¶netim uygulamasÄ±
   - Backend: Spring Boot, AI: Python-Flask
   - FotoÄŸraf yÃ¼kleyerek saÃ§ kesimi ve bakÄ±m Ã¶nerileri

2. Image Processing and Clustering Application
   - C# Windows Forms ile geliÅŸtirildi
   - K-Means (yoÄŸunluk, RGB, Mahalanobis) ve Sobel kenar bulma algoritmalarÄ±
   - DetaylÄ± piksel ve histogram analizi

3. Sports Complex Application
   - Java ve SQLite ile mobil uygulama
   - GÃ¼nlÃ¼k egzersiz rutinleri oluÅŸturma
   - SaÄŸlÄ±klÄ± yaÅŸam tarzÄ± desteÄŸi

4. Internship Project: User Platform
   - KullanÄ±cÄ± odaklÄ± sosyal etkileÅŸim platformu
   - GÃ¼venli kayÄ±t/giriÅŸ, kullanÄ±cÄ± listeleme, profil yÃ¶netimi

5. Static Website: News
   - HTML ve CSS ile geliÅŸtirildi
   - Haber ve iÃ§erik gÃ¶steren web sitesi

6. Horse-Racing-Game
   - C# ile geliÅŸtirildi
   - 2-4 oyunculu at yarÄ±ÅŸÄ± oyunu

KURALLAR:
1. Sadece FÄ°ÅžEK hakkÄ±nda bilgi ver, baÅŸka konularda konuÅŸma
2. TÃ¼rkÃ§e yanÄ±t ver
3. Samimi ve yardÄ±msever ol
4. BilmediÄŸin bir ÅŸey varsa dÃ¼rÃ¼stÃ§e sÃ¶yle
5. KÄ±sa ve Ã¶z yanÄ±tlar ver
6. Emoji kullanabilirsin ðŸ˜Š
`;

// Chat modelini oluÅŸtur
const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

// Chat geÃ§miÅŸini tut
let chatHistory = [];

// Mesaj gÃ¶nderme fonksiyonu
export const sendMessage = async (userMessage) => {
  try {
    // API key kontrolÃ¼
    if (!API_KEY) {
      throw new Error("Gemini API anahtarÄ± bulunamadÄ±!");
    }

    // Ä°lk mesajsa context'i ekle
    if (chatHistory.length === 0) {
      chatHistory.push({
        role: "user",
        parts: [{ text: FISEK_CONTEXT }]
      });
      chatHistory.push({
        role: "model",
        parts: [{ text: "Merhaba! Ben FÄ°ÅžEK'in kiÅŸisel asistanÄ±yÄ±m. Size FÄ°ÅžEK hakkÄ±nda bilgi verebilir ve sorularÄ±nÄ±zÄ± yanÄ±tlayabilirim. NasÄ±l yardÄ±mcÄ± olabilirim? ðŸ˜Š" }]
      });
    }

    // KullanÄ±cÄ± mesajÄ±nÄ± ekle
    chatHistory.push({
      role: "user",
      parts: [{ text: userMessage }]
    });

    // Chat'i baÅŸlat
    const chat = model.startChat({
      history: chatHistory,
      generationConfig: {
        maxOutputTokens: 500,
        temperature: 0.7,
      },
    });

    // YanÄ±t al
    const result = await chat.sendMessage(userMessage);
    const response = await result.response;
    const text = response.text();

    // Model yanÄ±tÄ±nÄ± geÃ§miÅŸe ekle
    chatHistory.push({
      role: "model",
      parts: [{ text }]
    });

    // GeÃ§miÅŸi 10 mesajla sÄ±nÄ±rla (performans iÃ§in)
    if (chatHistory.length > 10) {
      chatHistory = chatHistory.slice(-10);
    }

    return { success: true, text };

  } catch (error) {
    console.error("Gemini API HatasÄ±:", error);
    
    // Hata durumunda kullanÄ±cÄ± dostu mesaj
    let errorMessage = "ÃœzgÃ¼nÃ¼m, ÅŸu anda yanÄ±t veremiyorum. LÃ¼tfen daha sonra tekrar deneyin.";
    
    if (error.message.includes("API anahtarÄ±")) {
      errorMessage = "API baÄŸlantÄ±sÄ±nda sorun var. LÃ¼tfen daha sonra tekrar deneyin.";
    } else if (error.message.includes("quota")) {
      errorMessage = "API kotasÄ± dolmuÅŸ. LÃ¼tfen daha sonra tekrar deneyin.";
    }

    return { success: false, text: errorMessage };
  }
};

// Chat geÃ§miÅŸini temizle
export const clearChatHistory = () => {
  chatHistory = [];
};

// API key'in varlÄ±ÄŸÄ±nÄ± kontrol et
export const isApiKeyAvailable = () => {
  return !!API_KEY;
}; 